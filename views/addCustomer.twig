{% block addCustomer %}
<table border="1">
    <th colspan="2">Add Customer</th>
    <form action="/customerAdded" method="POST" onsubmit="return checkSubmit();">
        <tr>
            <td>
                <label for="ssNr">Personal Nr:</label>
            </td>
            <td>
                <input type="text" name="ssNr" id="ssNr" placeholder="YYMMDDXXXX" required>
            </td>
        </tr>
        <tr>
            <td>
                <label for="name">Name:</label>
            </td>
            <td>
                <input type="text" name="name" placeholder="Name..." required>
            </td>
        </tr>
        <tr>
            <td>
                <label for="address">Adress:</label>
            </td>
            <td>
                <input type="text" name="adress" placeholder="Adress..." required>
            </td>
            </td>
        </tr>
        <tr>
            <td>
                <label  for="postalAdress">Postal Adress:</label>
            </td>
            <td>
                <input type="text" name="postalAdress" required placeholder="Postal adress...">
            </td>
        </tr>
        <tr>
            <td>
                <label  for="phonennumber">Phonenumber:</label>
            </td>
            <td>
                <input type="text" name="phonenumber" id="phoneNumber" required placeholder="Phonenumber...">
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="submit" value="Submit" id="submitBtn" style="width: 100%;">
            </td>
        </tr>
    </form>
        <tr>
            <td colspan="2">
                <form action="/customers" method="POST">
                    <input type="submit" value="Customers" style="width: 100%;">
                </form>
            </td>
        </tr>
</table>
<h1 id="warning" style="display: none; font-size: 15px;"></h1>
<footer>
    <script>

        // Code below is for verifying personal number.
        
        // Defines input field for personal number.
        let ssNrInput = document.getElementById("ssNr");
        // Adds eventlistener to input field that listens when value is changed.
        ssNrInput.addEventListener('change', getSsNr);
        // Defines where the H1 for the warning message is.
        let warningMessage = document.getElementById("warning");

        let ssNr = 0;
        let submitOk = false;
        let dateOk = true;
        let numbers = 0;
        let sum = 0;
        let roundUp = 0;
        let yymmdd = '';

        // Function that gets personal number and then splits it up to array(each number is an index).
        function getSsNr() {
            ssNr = this.value;
            numbers = ssNr.split("");
        }

        // Function for formating and defining all different bits of it we need to validate.
        function formatSsNr() {
            // Reformats each number in personal number to an int and then take every other one times 2.
                numbers[0] = 2 * parseInt(numbers[0], 10);
                numbers[1] = 1 * parseInt(numbers[1], 10);
                numbers[2] = 2 * parseInt(numbers[2], 10);
                numbers[3] = 1 * parseInt(numbers[3], 10);
                numbers[4] = 2 * parseInt(numbers[4], 10);
                numbers[5] = 1 * parseInt(numbers[5], 10);
                numbers[6] = 2 * parseInt(numbers[6], 10);
                numbers[7] = 1 * parseInt(numbers[7], 10);
                numbers[8] = 2 * parseInt(numbers[8], 10);
                numbers[9] = parseInt(numbers[9], 10);


            // Checks if any number is now over 9, if so splits it up and add the two numbers together.
            function separateNums() {
                    for (let i = 0; i < numbers.length; i++) {
                        if (numbers[i].toString(10).split("").length > 1) {
                            number = numbers[i].toString(10).split("");
                            numbers[i] = parseInt(number[0], 10) + parseInt(number[1], 10);
                    }
                }
                
            }

            separateNums();

            // Adds all the numbers together to get the sum of them.
            sum = numbers[0] + 
                  numbers[1] + 
                  numbers[2] + 
                  numbers[3] + 
                  numbers[4] + 
                  numbers[5] + 
                  numbers[6] + 
                  numbers[7] + 
                  numbers[8];

            // Rounds the sum up.
            roundUp = Math.ceil((sum+1)/10)*10;
        }

        // Function for validating the date.
        function validateDate() {
            function y2k(number) { 
                return (number < 1000) ? number + 1900 : number; 
            }

            // Defines that the date is the first 6 characters in the personal number.
            yymmdd = ssNr.substring(0, 6);

            // Defines the year, month and day.
            year = yymmdd.substring(0, 2) - 0;
            month = yymmdd.substring(2, 4) - 1;
            day = parseInt(yymmdd.substring(4, 6), 10);

            // Changes all years that is under 70 to ex. 2067 and all above 70 to ex 1989 since JS can't create dates before 1970.
            if (year < 70) {
                year += 2000;
            } else {
                year += 1900;
            }

            // Creates a Date object with the year, month and day defined above.
            let testDate = new Date(year, month, day);

            // Checks if the Date objects year, month and day is the same as we defined them above.
            if (y2k(testDate.getYear() == year) && (testDate.getMonth() == month) && (testDate.getDate() == day)) {
                dateOk = true;
            } else {
                dateOk = false;
            } 
            return dateOk;
        }

        // Code below is for verifying phonenumber.
        
        // Defines were the input fiels is.
        let phoneNumberInput = document.getElementById("phoneNumber");
        // Adds eventlistener to that field that listens when value is changed.
        phoneNumberInput.addEventListener('change', getPhoneNumber);

        let phoneNumber = 0;
        let phoneOk = true;

        // Gets the value of the input field.
        function getPhoneNumber() {
            phoneNumber = this.value;
        }
        
        // Checks if phonenumber starts with 0 and is 10 characters through regEx.
        function validatePhone() {
            if (!phoneNumber.match(/^([0])([0-9]{9})$/)) {
                phoneOk = false;
            } else {
                phoneOk = true;
            }
            return phoneOk;
        }

        // function below is for verifying form before it submits.
        function validateForm() {
            validateDate();
            formatSsNr();
            validatePhone();
            // Checks if personal number is correct length, date, and controllnumber and also checks if phonenumber validation checked out as true.
            if (!ssNr.match(/^([0-9]){2}([0-1])([0-9])([0-9]{2})([0-9]{4})$/)) {
                submitOk = false;
                warningMessage.innerHTML = "Wrong format on personal number. Should be: YYMMDDXXXX.";
            } else if (dateOk == false) {
                submitOk = false;
                warningMessage.innerHTML = "Seems like this is not a valid date. Please try again."; 
            } else if (roundUp - sum != numbers[9]) {
                submitOk = false;
                warningMessage.innerHTML = "Seems like this is not a valid personal number. Please try again.";
            } else if (phoneOk == false) {
                submitOk = false;
                warningMessage.innerHTML = "Wrong format on phonenumber. Should be: 0XXXXXXXXX";
            } else {
                submitOk = true;
            }
        }

        // Function for checking if form is allowed to submit or not and also displays warning message if not correct.
        function checkSubmit() {
            validateForm();
            if (submitOk == true) {
                return true;
            } else {
                warningMessage.style.display = "block";
                return false;
            }
        }
    </script>
</footer>
{% endblock %}